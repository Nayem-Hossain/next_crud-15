// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id           BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  firstName    String   @db.VarChar(50)
  middleName   String   @db.VarChar(50)
  lastName     String   @db.VarChar(50)
  mobile       String   @db.VarChar(15)
  email        String   @db.VarChar(50)
  passwordHash String   @db.VarChar(32)
  registeredAt DateTime @default(now()) @db.Timestamp(0)
  lastLogin    DateTime @default(now()) @updatedAt @db.Timestamp(0)
  intro        String   @db.TinyText
  profile      String   @db.Text
  posts        post[]
}

model tag {
  id        BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  title     String     @db.VarChar(75)
  metaTitle String     @db.VarChar(100)
  slug      String     @db.VarChar(100)
  content   String     @db.Text
  post_tags post_tag[]
}

model post {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  authorId    BigInt   @db.UnsignedBigInt
  parentId    BigInt   @db.UnsignedBigInt
  title       String   @db.VarChar(75)
  metaTitle   String   @db.VarChar(100)
  slug        String   @db.VarChar(100)
  summary     String   @db.TinyText
  published   Boolean  @db.TinyInt
  createdAt   DateTime @default(now()) @db.Timestamp(0)
  updatedAt   DateTime @default(now()) @updatedAt @db.Timestamp(0)
  publishedAt DateTime @db.DateTime()
  content     String   @db.Text

  user            user?           @relation(fields: [authorId], references: [id], onUpdate: Cascade, onDelete: Restrict)
  post_comments   post_comment[]
  post_tags       post_tag[]
  post_categories post_category[]
  post_metas      post_meta[]
}

model category {
  id              BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  parentId        BigInt          @db.UnsignedBigInt
  title           String          @db.VarChar(75)
  metaTitle       String          @db.VarChar(100)
  slug            String          @db.VarChar(100)
  content         String          @db.Text
  post_categories post_category[]
}

model post_tag {
  postId BigInt @unique @db.UnsignedBigInt
  tagId  BigInt @unique @db.UnsignedBigInt
  post   post   @relation(fields: [postId], references: [id], onUpdate: Cascade, onDelete: Restrict)
  tag    tag    @relation(fields: [tagId], references: [id], onUpdate: Cascade, onDelete: Restrict)
}

model post_category {
  postId     BigInt   @unique @db.UnsignedBigInt
  categoryId BigInt   @unique @db.UnsignedBigInt
  post       post     @relation(fields: [postId], references: [id], onUpdate: Cascade, onDelete: Restrict)
  category   category @relation(fields: [categoryId], references: [id], onUpdate: Cascade, onDelete: Restrict)
}

model post_meta {
  id      BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  postId  BigInt @db.UnsignedBigInt
  key     String @db.VarChar(100)
  content String @db.Text
  post    post   @relation(fields: [postId], references: [id], onUpdate: Cascade, onDelete: Restrict)
}

model post_comment {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  postId      BigInt   @db.UnsignedBigInt
  parentId    BigInt   @db.UnsignedBigInt
  title       String   @db.VarChar(100)
  published   Boolean  @db.TinyInt
  createdAt   DateTime @default(now()) @db.Timestamp(0)
  publishedAt DateTime @db.DateTime()
  content     String   @db.Text
  post        post     @relation(fields: [postId], references: [id], onUpdate: Cascade, onDelete: Restrict)
}
